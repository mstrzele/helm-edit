---
defaults: &defaults
  working_directory: /go/src/github.com/mstrzele/helm-edit
  docker:
    - image: circleci/golang:1.12

version: 2
jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - run: dep ensure
      - persist_to_workspace:
          root: vendor
          paths:
            - "*"

      - run: go install
      - run:
          name: Installing gometalinter
          command: |
            go get -u github.com/alecthomas/gometalinter
            gometalinter --install
      - run:
          name: Running gometalinter
          command: gometalinter --deadline=5m --errors

  build:
    <<: *defaults
    steps:
      - run:
          name: Installing Gox
          command: go get github.com/mitchellh/gox
      - checkout
      - attach_workspace:
          at: vendor
      - run: >
          gox -osarch "darwin/amd64 linux/amd64"
          -output "dist/{{.Dir}}_{{.OS}}_{{.Arch}}"
      - persist_to_workspace:
          root: dist
          paths:
            - helm-edit_darwin_amd64
            - helm-edit_linux_amd64

  test:
    machine: true
    steps:
      - checkout

      - run: |
          echo "export PATH=\"$CIRCLE_WORKING_DIRECTORY:\$PATH\"" >> $BASH_ENV

      - run: docker info

      - run: |
          wget -O kind https://github.com/kubernetes-sigs/kind/releases/download/v0.3.0/kind-linux-amd64
          chmod +x kind
      - run: kind create cluster --image kindest/node:v1.14.2
      - run: |
          echo 'export KUBECONFIG="$(kind get kubeconfig-path)"' >> $BASH_ENV
      - run: |
          wget -O kubectl https://storage.googleapis.com/kubernetes-release/release/v1.14.2/bin/linux/amd64/kubectl
          chmod +x kubectl
      - run: kubectl version

      - run: |
          wget https://get.helm.sh/helm-v2.14.1-linux-amd64.tar.gz
          tar -xzf helm-v2.14.1-linux-amd64.tar.gz --strip-components 1 linux-amd64/helm
      - run: |
          kubectl apply -f test/rbac-config.yaml
          helm init --service-account tiller --wait
      - run: helm version

      - attach_workspace:
          at: dist
      - run: |
          mkdir $HOME/.helm/plugins/helm-edit
          cp plugin.yaml $HOME/.helm/plugins/helm-edit/
          cp dist/helm-edit_linux_amd64 $HOME/.helm/plugins/helm-edit/helm-edit

      - run:
          command: |
            helm upgrade foo ./foo -i
            diff -B <(helm get values -a foo) <(helm edit -a -e /bin/cat foo)
          working_directory: test

  deploy:
    <<: *defaults
    steps:
      - run:
          name: Installing ghr
          command: go get -u github.com/tcnksm/ghr
      - checkout
      - attach_workspace:
          at: dist
      - deploy:
          command: >
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME
            -r $CIRCLE_PROJECT_REPONAME --replace `git describe --tags` dist/

workflows:
  version: 2
  lint-build-and-deploy:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
